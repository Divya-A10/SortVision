procedure radixSort(array)
    // Find the maximum number to know number of digits
    max = getMax(array)

    // Do counting sort for every digit
    exp = 1
    while max/exp > 0 do
        countingSortByDigit(array, exp)
        exp = exp * 10
    end while
end procedure

procedure countingSortByDigit(array, exp)
    n = length of array
    output = new array of size n
    count = new array of size 10, initialized to 0

    // Store count of occurrences in count[]
    for i from 0 to n-1 do
        digit = floor(array[i]/exp) mod 10
        count[digit] = count[digit] + 1
    end for

    // Change count[i] so that count[i] contains
    // actual position of this digit in output[]
    for i from 1 to 9 do
        count[i] = count[i] + count[i-1]
    end for

    // Build the output array
    for i from n-1 down to 0 do
        digit = floor(array[i]/exp) mod 10
        output[count[digit] - 1] = array[i]
        count[digit] = count[digit] - 1
    end for

    // Copy the output array to array[]
    for i from 0 to n-1 do
        array[i] = output[i]
    end for
end procedure

procedure getMax(array)
    max = array[0]
    for i from 1 to length of array - 1 do
        if array[i] > max then
            max = array[i]
        end if
    end for
    return max
end procedure
